-- Applies tenant-aware RLS templates generated by helper functions.
set check_function_bodies = off;

do $$
declare
  rec record;
  pol record;
  v_infra_exists boolean;
  v_business_exists boolean;
  v_infra_column text;
  v_business_column text;
  v_using text;
  v_check text;
  v_select_policy text;
  v_modify_policy text;
  v_anon_policy text;
  v_service_policy text;
begin
  for rec in
    select *
    from (values
      ('businesses', 'infrastructure_id', 'id', false, false),
      ('warehouses', 'infrastructure_id', 'business_id', false, false),
      ('warehouse_locations', 'infrastructure_id', 'business_id', false, false),
      ('inventory_items', 'infrastructure_id', 'business_id', false, false),
      ('inventory_movements', 'infrastructure_id', 'business_id', true, false),
      ('stock_allocations', 'infrastructure_id', 'business_id', true, false),
      ('orders', 'infrastructure_id', 'business_id', false, false),
      ('order_assignments', 'infrastructure_id', 'business_id', false, false),
      ('order_status_history', 'infrastructure_id', 'business_id', false, false),
      ('driver_profiles', 'infrastructure_id', 'business_id', false, false),
      ('driver_locations', 'infrastructure_id', 'business_id', false, false),
      ('order_notifications', 'infrastructure_id', 'business_id', false, false),
      ('user_business_roles', 'infrastructure_id', 'business_id', true, false),
      ('role_change_log', 'infrastructure_id', 'business_id', false, false)
    ) as t(table_name, infrastructure_column, business_column, require_manager, infrastructure_only)
  loop
    if to_regclass(format('public.%I', rec.table_name)) is null then
      continue;
    end if;

    select exists (
      select 1
      from information_schema.columns
      where table_schema = 'public'
        and table_name = rec.table_name
        and column_name = rec.infrastructure_column
    ) into v_infra_exists;

    if not v_infra_exists then
      continue;
    end if;

    select exists (
      select 1
      from information_schema.columns
      where table_schema = 'public'
        and table_name = rec.table_name
        and column_name = rec.business_column
    ) into v_business_exists;

    v_infra_column := quote_ident(rec.infrastructure_column);
    v_business_column := case when v_business_exists then quote_ident(rec.business_column) else 'null' end;

    v_select_policy := format('Tenant access (%s) select', rec.table_name);
    v_modify_policy := format('Tenant access (%s) modify', rec.table_name);
    v_anon_policy := format('Anon blocked (%s)', rec.table_name);
    v_service_policy := format('Service role (%s) bypass', rec.table_name);

    if rec.infrastructure_only or not v_business_exists then
      v_using := format('public.tenant_can_access(%s, null)', v_infra_column);
      if rec.infrastructure_only then
        v_using := format('public.tenant_can_access_infrastructure(%s)', v_infra_column);
      end if;
      v_check := v_using;
    else
      v_using := format('public.tenant_can_access(%s, %s)', v_infra_column, v_business_column);
      if rec.require_manager then
        v_check := format('public.tenant_can_manage_business(%s, %s)', v_infra_column, v_business_column);
      else
        v_check := v_using;
      end if;
    end if;

    execute format('alter table public.%I enable row level security;', rec.table_name);

    for pol in
      select policyname
      from pg_policies
      where schemaname = 'public'
        and tablename = rec.table_name
    loop
      execute format('drop policy "%s" on public.%I;', pol.policyname, rec.table_name);
    end loop;

    execute format(
      'create policy "%s" on public.%I for select to authenticated using (%s);',
      v_select_policy,
      rec.table_name,
      v_using
    );

    execute format(
      'create policy "%s" on public.%I for all to authenticated using (%s) with check (%s);',
      v_modify_policy,
      rec.table_name,
      v_check,
      v_check
    );

    execute format(
      'create policy "%s" on public.%I for select to anon using (false);',
      v_anon_policy,
      rec.table_name
    );

    execute format(
      'create policy "%s" on public.%I for all to service_role using (true) with check (true);',
      v_service_policy,
      rec.table_name
    );
  end loop;
end $$;
